functions:
  "setup_project":
    - command: shell.exec
      params:
        script: |
          mkdir -p src/github.com/10gen
    - command: git.get_project
      params:
        directory: src/github.com/10gen/stitch-cli

  "set_github_build_status":
    - command: shell.exec
      params:
        silent: true
        script: |
          status_url=`curl -X POST -d "{}" -H "Content-Type: application/json" "${stitch_cli_evg_hook_url}?secret=${stitch_cli_evg_secret}&versionId=${version_id}"`
          if [ "$status_url" = "null" ]; then
            exit 0
          fi
          status_url=`sed -e 's/^"//' -e 's/"$//' <<<"$status_url"`
          state=`cat commit_state`
          curl -X POST -H "Content-Type: application/json" $status_url -d "{\"state\": \"$state\", \"target_url\": \"https://evergreen.mongodb.com/build/${build_id}\", \"context\": \"continuous-integration/evergreen-ci/${build_variant}\"}"

tasks:
  - name: test_unit
    exec_timeout_secs: 3600
    commands:
      - func: "setup_project"
      - command: shell.exec
        params:
          script: |
            set -v
            set -e
            export GOPATH=`pwd`
            export PATH="`pwd`:$PATH"
            go test -v $(go list github.com/10gen/stitch-cli/...)

  - name: gometalinter
    commands:
      - func: "setup_project"
      - command: shell.exec
        params:
          script: |
            export GOPATH=`pwd`
            go get -u github.com/alecthomas/gometalinter
            $GOPATH/bin/gometalinter --install
            cd src/github.com/10gen/stitch-cli
            $GOPATH/bin/gometalinter --exclude=vendor --vendor --config=.linter.config ./...

  - name: github_pull_request_start
    priority: 100
    commands:
      - command: shell.exec
        params:
          script: |
            if ! [ "${is_patch}" = "true" ]; then
              exit 0
            fi
            echo pending > commit_state
      - func: "set_github_build_status"

  - name: github_pull_request_end
    depends_on:
      - name: github_pull_request_start
      - name: test_unit
        status: "*"
        variant: "linux-64"
      - name: gometalinter
        status: "*"
        variant: "linux-64"
    commands:
      - command: shell.exec
        params:
          silent: true
          script: |
            if ! [ "${is_patch}" = "true" ]; then
              exit 0
            fi
            curl -H "Auth-Username: ${evg_rest_user}" -H "Api-Key: ${evg_rest_api_key}"  https://evergreen.mongodb.org/rest/v1/builds/${build_id} | python -c "import sys, json; tasks = json.load(sys.stdin)['tasks']; sys.exit(0) if all(tasks[task]['status'] == 'success' or task == 'github_pull_request_end'  for task in tasks) else sys.exit(1)"
            if [ $? -eq 0 ]; then
              state="success"
            else
              state="failure"
            fi
            echo $state > commit_state
      - func: "set_github_build_status"

buildvariants:
- name: linux-64
  display_name: Linux-64
  run_on:
  - baas-linux
  tasks:
  - name: github_pull_request_start
  - name: test_unit
  - name: github_pull_request_end
  - name: gometalinter
